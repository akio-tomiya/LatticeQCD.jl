module Rhmc
    import ..AlgRemez:AlgRemez_coeffs,calc_coefficients

    const coeffs_12 = AlgRemez_coeffs(35.76877880344718, [-2.611603580931762e-6, -2.8381078304162547e-5, -0.00024575851782184877, -0.0020470080999742007, -0.016923799105426088, -0.14034361960343106, -1.1877898203825932, -10.955212949978659, -146.07789284928893, -14714.341373866839], [0.00023220051347978252, 0.0014679843480651033, 0.006577084315568452, 0.027426964178005095, 0.11250019513122003, 0.46049080638938455, 1.8988299965694169, 8.104664281763002, 40.29762890763353, 497.70654517555414], 10)
    const coeffs_m12 = AlgRemez_coeffs(0.027957342505180133, [0.009504168034266293, 0.014392806670277538, 0.02668521749757119, 0.05270932006455869, 0.10589384745339038, 0.2139495082299973, 0.4353956294494188, 0.9089955204708765, 2.107201294600078, 7.749985438494519], [5.143593197266517e-5, 0.0006352731089632578, 0.003158674944452018, 0.013481986300116959, 0.055592857978478315, 0.22755516086118974, 0.9333880277034011, 3.892302237847687, 17.438878032822647, 110.24954086601954], 10)
    const coeffs_14 = AlgRemez_coeffs(6.9461071718499525, [-3.7385105377001425e-6, -1.7764883979837546e-5, -6.334438533952787e-5, -0.00021317868898123004, -0.0007061292823812292, -0.0023271447494456277, -0.007658442853216887, -0.025215367727471134, -0.08325492911813415, -0.27706279011926743, -0.9413396741768589, -3.376769295570277, -14.000699219260555, -87.48968373506541, -2438.159453743938], [7.533204879983615e-5, 0.0004155648337491737, 0.001355472748322587, 0.0038120901090773723, 0.010182414902576235, 0.02668386113490887, 0.06943317053167551, 0.18025949646037842, 0.46811809693900475, 1.219485561990294, 3.205950452609407, 8.636487104246942, 24.866247747939997, 87.21468047228943, 671.5034010759199], 15)
    const coeffs_m14 = AlgRemez_coeffs(0.14396552993778106, [0.00034605541183977854, 0.0007361352806089118, 0.0014491361385218552, 0.002897390997668544, 0.005861553385743302, 0.011923530079141716, 0.0243152683972108, 0.04966483224890658, 0.10166850937810712, 0.20917319384688998, 0.4358756590644266, 0.9388526693245018, 2.2065131459490663, 6.583620229613641, 42.16178846519866], [3.8123410780916776e-5, 0.0002935285649316097, 0.0010295079603283045, 0.002964168149734324, 0.007985151479544388, 0.020992458457826137, 0.054687054756901776, 0.14201748314340246, 0.3686998563362629, 0.959381398013239, 2.5141383694277666, 6.715476095132465, 18.886399620855748, 61.602902654298305, 339.8288033824946], 15)
    const coeffs_18 =AlgRemez_coeffs(2.6226563721874356, [-5.960771208125207e-6, -2.365926748832181e-5, -7.312974957271435e-5, -0.00021647258378734637, -0.0006342614065525487, -0.0018530026882076763, -0.005410134459579222, -0.01580639454625644, -0.04630025630383474, -0.13658135694721724, -0.4103890831099445, -1.2939417075231405, -4.636609634886856, -23.781760392176484, -426.7735702750801], [6.511406585080085e-5, 0.0003827736362029256, 0.001267715019499123, 0.003583090268588116, 0.009587354346137916, 0.02513865988838697, 0.06541997845298224, 0.169826364132841, 0.4409229237078518, 1.1481048390885387, 3.015181840776192, 8.102022022873221, 23.168853584928378, 79.54719981908272, 550.2916347706022], 15)
    const coeffs_m18 = AlgRemez_coeffs(0.3812928032069815, [5.704553583093206e-5, 0.00015212625565764492, 0.000349624141431336, 0.0007978804843345692, 0.0018271691389798897, 0.004194095333537474, 0.009639799649923194, 0.022183627514153276, 0.05116785778935707, 0.11868662341141359, 0.2793062781945737, 0.6824916959670321, 1.8418776768771283, 6.536228531781246, 56.90662030012766], [4.652078712894077e-5, 0.0003218215104770888, 0.0011049316663925537, 0.003159705062233523, 0.00849036686736275, 0.02229761527729769, 0.05806003413186596, 0.15074220148748674, 0.39131776875161906, 1.018351818022971, 2.6701839814977193, 7.144670683970085, 20.193812967613667, 66.8802591890845, 393.15622001947446], 15)



    """
    f(x) = x^(y/z) = coeff_plus.α0 + sum_i^n coeff_plus.α[i]/(x + coeff_plus.β[i])
    f(x) = x^(-y/z) = coeff_minus.α0 + sum_i^n coeff_minus.α[i]/(x + coeff_minus.β[i])
    """
    struct RHMC #type for the rational Hybrid Monte Carlo
        y::Int64
        z::Int64
        coeffs::AlgRemez_coeffs
        coeffs_inverse::AlgRemez_coeffs

        function RHMC(y,z;n=5,lambda_low=0.0004,lambda_high=64,precision=42)
            println("RHMC mode!")
            order = y // z # y/z
            num = numerator(order)
            den = denominator(order)
            @assert num != 0 "numerator should not be zero!"
            @assert num*den != 1 "$(num ÷ den) should not be 1!"
             
            if n == 10 && num == 1 && den == 2
                coeffs =coeffs_12
                coeffs_inverse =coeffs_m12
            elseif n == 10 && num == 1 && den == 4
                coeffs =coeffs_14
                coeffs_inverse =coeffs_m14
            elseif n == 10 && num == 1 && den == 8
                coeffs =coeffs_18
                coeffs_inverse =coeffs_m18
            elseif n == 10 && num == -1 && den == 2
                coeffs =coeffs_m12
                coeffs_inverse =coeffs_12
            elseif n == 10 && num == -1 && den == 4
                coeffs =coeffs_m14
                coeffs_inverse =coeffs_14
            elseif n == 10 && num == -1 && den == 8
                coeffs =coeffs_18
                coeffs_inverse =coeffs_18
            else
                println("$y//$z with the order $n: coefficients for RHMC should be calculated")
                coeff_plus,coeff_minus = calc_coefficients(abs(num),den,n,lambda_low,lambda_high,precision=precision)
                if num > 0
                    coeffs =coeff_plus
                    coeffs_inverse =coeff_minus
                elseif num < 0
                    coeffs_inverse =coeff_plus
                    coeffs =coeff_minus
                end
            end

            println("the coefficients for x^{$num/$den}: ")
            display(coeffs)
            println("the coefficients for x^{-$num/$den}: ")
            display(coeffs_inverse)

            return new(num,den,coeffs,coeffs_inverse)
        end
    end

end