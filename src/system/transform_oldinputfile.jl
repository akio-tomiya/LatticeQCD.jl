module Transform_oldinputfile

function default_system()
    system = Dict()
    system["Dirac_operator"] = "Wilson"
    system["quench"] = false
    system["initial"] = "cold"
    system["BoundaryCondition"] = [1, 1, 1, -1]
    system["Nwing"] = 1
    system["randomseed"] = 111

    system["verboselevel"] = 2

    system["saveU_format"] = "JLD"
    system["saveU_every"] = 1
    system["saveU_dir"] = "./confs"

    system["initialtrj"] = 1

    system["update_method"] = "HMC"
    system["isevenodd"] = true

    system["Nsteps"] = 100
    system["Nthermalization"] = 0

    system["julian_random_number"] = false
    return system
end

function default_md()
    md = Dict()
    md["Δτ"] = 0.05
    md["MDsteps"] = 20
    md["SextonWeingargten"] = false

    return md
end

function default_defaultmeasures()
    defaultmeasures = Array{Dict,1}(undef, 2)
    for i = 1:length(defaultmeasures)
        defaultmeasures[i] = Dict()
    end
    defaultmeasures[1]["methodname"] = "Plaquette"
    defaultmeasures[1]["measure_every"] = 1
    defaultmeasures[1]["fermiontype"] = nothing
    defaultmeasures[2]["methodname"] = "Polyakov_loop"
    defaultmeasures[2]["measure_every"] = 1
    defaultmeasures[2]["fermiontype"] = nothing

    return defaultmeasures
end


function default_actions()
    actions = Dict()

    actions["use_autogeneratedstaples"] = false
    #actions["couplinglist"] = []
    actions["couplingcoeff"] = []
    actions["coupling_loops"] = nothing
    return actions
end

function  default_cg()
    cg = Dict()
    cg["eps"] = 1e-19
    cg["MaxCGstep"] = 3000
    return cg
end

function default_wilson()
    wilson = Dict()
    wilson["r"] = 1
    wilson["Clover_coefficient"] = 1.5612

    return wilson
end

function default_staggered()
    staggered = Dict()
    staggered["Nf"] = 4
    return staggered
end

function default_measurement()
    measurement = Dict()
    measurement["measurement_methods"] = defaultmeasures
    return measurement
end

system = default_system()
md = default_md()
defaultmeasures = default_defaultmeasures()
actions  =default_actions()
cg = default_cg()
wilson = default_wilson()
staggered = default_staggered()
measurement = default_measurement()

function transform_to_toml(filename)
    include(abspath(filename))
    
end

function demo_transform()
    filename = "demo.jl"
    transform_to_toml(filename)
end


demo_transform()

end